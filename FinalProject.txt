Code:
def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 9)
 
def check_winner(board, player):
    # Check rows, columns, and diagonals for a win
    for i in range(3):
        if all(board[i][j] == player for j in range(3)):
            return True
        if all(board[j][i] == player for j in range(3)):
            return True
    if all(board[i][i] == player for i in range(3)) or all(board[i][2 - i] == player for i in range(3)):
        return True
    return False
 
def is_full(board):
    return all(cell != " " for row in board for cell in row)
 
def main():
    board = [[" " for _ in range(3)] for _ in range(3)]
    current_player = "X"
       while True:
        print_board(board)
        print(f"Player {current_player}'s turn")
        row = int(input("Enter the row (0, 1, 2): "))
        col = int(input("Enter the column (0, 1, 2): "))
 
        if 0 <= row < 3 and 0 <= col < 3 and board[row][col] == " ":
            board[row][col] = current_player
        else:
            print("Invalid move. Try again.")
            continue
 
        if check_winner(board, current_player):
            print_board(board)
            print(f"Player {current_player} wins!")
            break
 
        if is_full(board):
            print_board(board)
            print("It's a draw!")
            break
 
        current_player = "O" if current_player == "X" else "X"
 
if __name__ == "__main__":
    main()
